// COMENTADO: Script de desenvolvimento - desabilitado para otimiza√ß√£o
// const { PrismaClient } = require('@prisma/client')
// const prisma = new PrismaClient()

// async function testarNotificacoes() {
  try {
    console.log('üîç Verificando notifica√ß√µes no banco de dados...')
    
    // Buscar todas as notifica√ß√µes
    const todasNotificacoes = await prisma.notificacao.findMany({
      orderBy: {
        data: 'desc'
      }
    })
    
    console.log(`üìä Total de notifica√ß√µes no banco: ${todasNotificacoes.length}`)
    
    if (todasNotificacoes.length > 0) {
      console.log('\nüìã √öltimas 5 notifica√ß√µes:')
      todasNotificacoes.slice(0, 5).forEach((notif, index) => {
        console.log(`${index + 1}. ID: ${notif.id}`)
        console.log(`   Usu√°rio: ${notif.usuarioId}`)
        console.log(`   Tipo: ${notif.tipo}`)
        console.log(`   T√≠tulo: ${notif.titulo}`)
        console.log(`   Mensagem: ${notif.mensagem}`)
        console.log(`   Lida: ${notif.lida}`)
        console.log(`   Data: ${notif.data}`)
        console.log('---')
      })
    } else {
      console.log('‚ùå Nenhuma notifica√ß√£o encontrada no banco!')
    }
    
    // Verificar usu√°rios
    const usuarios = await prisma.usuario.findMany({
      take: 5,
      orderBy: {
        dataCriacao: 'desc'
      }
    })
    
    console.log(`\nüë• Total de usu√°rios: ${usuarios.length}`)
    if (usuarios.length > 0) {
      console.log('√öltimos usu√°rios:')
      usuarios.forEach((user, index) => {
        console.log(`${index + 1}. ${user.nome} (${user.id})`)
      })
    }
    
//   } catch (error) {
//     console.error('‚ùå Erro ao testar notifica√ß√µes:', error)
//   } finally {
//     await prisma.$disconnect()
//   }
// }

// testarNotificacoes() 