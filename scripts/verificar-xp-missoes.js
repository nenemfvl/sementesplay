const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function verificarXPMissoes() {
  try {
    console.log('üîç Verificando XP das miss√µes...')
    
    // Buscar todas as miss√µes
    const missoes = await prisma.missao.findMany({
      where: {
        ativa: true
      },
      select: {
        id: true,
        titulo: true,
        tipo: true,
        objetivo: true,
        recompensa: true,
        emblema: true
      }
    })
    
    console.log(`\nüìã Encontradas ${missoes.length} miss√µes ativas:`)
    
    for (const missao of missoes) {
      console.log(`\nüéØ ${missao.titulo}`)
      console.log(`   ID: ${missao.id}`)
      console.log(`   Tipo: ${missao.tipo}`)
      console.log(`   Objetivo: ${missao.objetivo}`)
      console.log(`   Recompensa (XP): ${missao.recompensa}`)
      console.log(`   Emblema: ${missao.emblema}`)
    }
    
    // Verificar miss√µes relacionadas a doa√ß√µes especificamente
    console.log('\nüí∏ Miss√µes relacionadas a doa√ß√µes:')
    const missoesDoacao = missoes.filter(m => 
      m.titulo.includes('Doa√ß√£o') || 
      m.titulo.includes('Doador')
    )
    
    for (const missao of missoesDoacao) {
      console.log(`\n   üéØ ${missao.titulo}`)
      console.log(`      XP: ${missao.recompensa}`)
      console.log(`      Objetivo: ${missao.objetivo}`)
    }
    
    // Verificar se h√° valores de XP inconsistentes
    console.log('\n‚ö†Ô∏è  Verificando inconsist√™ncias:')
    const missoesSemXP = missoes.filter(m => !m.recompensa || m.recompensa === 0)
    if (missoesSemXP.length > 0) {
      console.log(`   Miss√µes sem XP: ${missoesSemXP.length}`)
      for (const missao of missoesSemXP) {
        console.log(`      - ${missao.titulo}`)
      }
    } else {
      console.log('   ‚úÖ Todas as miss√µes t√™m XP definido')
    }
    
    // Verificar valores de XP muito altos ou baixos
    const missoesXPAlto = missoes.filter(m => m.recompensa > 100)
    const missoesXPBaixo = missoes.filter(m => m.recompensa < 10)
    
    if (missoesXPAlto.length > 0) {
      console.log(`\n   ‚ö†Ô∏è  Miss√µes com XP alto (>100): ${missoesXPAlto.length}`)
      for (const missao of missoesXPAlto) {
        console.log(`      - ${missao.titulo}: ${missao.recompensa} XP`)
      }
    }
    
    if (missoesXPBaixo.length > 0) {
      console.log(`\n   ‚ö†Ô∏è  Miss√µes com XP baixo (<10): ${missoesXPBaixo.length}`)
      for (const missao of missoesXPBaixo) {
        console.log(`      - ${missao.titulo}: ${missao.recompensa} XP`)
      }
    }
    
    // Estat√≠sticas gerais
    const totalXP = missoes.reduce((sum, m) => sum + (m.recompensa || 0), 0)
    const mediaXP = totalXP / missoes.length
    
    console.log('\nüìä Estat√≠sticas:')
    console.log(`   Total de miss√µes: ${missoes.length}`)
    console.log(`   Total de XP dispon√≠vel: ${totalXP}`)
    console.log(`   M√©dia de XP por miss√£o: ${mediaXP.toFixed(1)}`)
    console.log(`   XP m√≠nimo: ${Math.min(...missoes.map(m => m.recompensa || 0))}`)
    console.log(`   XP m√°ximo: ${Math.max(...missoes.map(m => m.recompensa || 0))}`)
    
  } catch (error) {
    console.error('‚ùå Erro:', error)
  } finally {
    await prisma.$disconnect()
  }
}

verificarXPMissoes() 