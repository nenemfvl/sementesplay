const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

const missoesGamificacao = [
  // üéØ MISS√ïES DI√ÅRIAS
  {
    titulo: 'Login Di√°rio',
    descricao: 'Fa√ßa login por 7 dias consecutivos',
    tipo: 'diaria',
    objetivo: 7,
    recompensa: 10,
    emblema: 'üî•'
  },
  {
    titulo: 'Explorador',
    descricao: 'Visite 3 p√°ginas diferentes',
    tipo: 'diaria',
    objetivo: 3,
    recompensa: 15,
    emblema: 'üó∫Ô∏è'
  },
  {
    titulo: 'Social',
    descricao: 'Adicione 1 novo amigo',
    tipo: 'diaria',
    objetivo: 1,
    recompensa: 20,
    emblema: 'üë•'
  },
  {
    titulo: 'Doador Di√°rio',
    descricao: 'Fa√ßa 1 doa√ß√£o',
    tipo: 'diaria',
    objetivo: 1,
    recompensa: 25,
    emblema: 'üíù'
  },

  // üìÖ MISS√ïES SEMANAIS
  {
    titulo: 'Doador Semanal',
    descricao: 'Fa√ßa 5 doa√ß√µes',
    tipo: 'semanal',
    objetivo: 5,
    recompensa: 100,
    emblema: 'üíé'
  },
  {
    titulo: 'Apoiador',
    descricao: 'Doe para 3 criadores diferentes',
    tipo: 'semanal',
    objetivo: 3,
    recompensa: 75,
    emblema: 'ü§ù'
  },
  {
    titulo: 'Social Ativo',
    descricao: 'Adicione 5 novos amigos',
    tipo: 'semanal',
    objetivo: 5,
    recompensa: 50,
    emblema: 'üåü'
  },
  {
    titulo: 'Explorador',
    descricao: 'Visite todas as se√ß√µes do site',
    tipo: 'semanal',
    objetivo: 8,
    recompensa: 60,
    emblema: 'üîç'
  },

  // üåü MISS√ïES MENSAIS
  {
    titulo: 'Doador Mensal',
    descricao: 'Fa√ßa 20 doa√ß√µes',
    tipo: 'mensal',
    objetivo: 20,
    recompensa: 300,
    emblema: 'üëë'
  },
  {
    titulo: 'Apoiador Fiel',
    descricao: 'Doe para 10 criadores diferentes',
    tipo: 'mensal',
    objetivo: 10,
    recompensa: 250,
    emblema: 'üèÜ'
  },
  {
    titulo: 'Comunidade',
    descricao: 'Adicione 20 novos amigos',
    tipo: 'mensal',
    objetivo: 20,
    recompensa: 200,
    emblema: 'üåç'
  },
  {
    titulo: 'Explorador Completo',
    descricao: 'Visite todas as p√°ginas',
    tipo: 'mensal',
    objetivo: 15,
    recompensa: 150,
    emblema: 'üéØ'
  },

  // ‚≠ê MISS√ïES √öNICAS (ESPECIAIS)
  {
    titulo: 'Primeira Doa√ß√£o',
    descricao: 'Fa√ßa sua primeira doa√ß√£o',
    tipo: 'unica',
    objetivo: 1,
    recompensa: 100,
    emblema: 'üíñ'
  },
  {
    titulo: 'Primeiro Amigo',
    descricao: 'Adicione seu primeiro amigo',
    tipo: 'unica',
    objetivo: 1,
    recompensa: 50,
    emblema: 'ü§ó'
  },
  {
    titulo: 'Primeiro Coment√°rio',
    descricao: 'Deixe seu primeiro coment√°rio',
    tipo: 'unica',
    objetivo: 1,
    recompensa: 25,
    emblema: 'üí¨'
  },
  {
    titulo: 'Explorador Iniciante',
    descricao: 'Visite 5 p√°ginas diferentes',
    tipo: 'unica',
    objetivo: 5,
    recompensa: 75,
    emblema: 'üß≠'
  },

  // üî• MISS√ïES DE STREAK
  {
    titulo: 'Login Streak 7',
    descricao: '7 dias consecutivos de login',
    tipo: 'unica',
    objetivo: 7,
    recompensa: 100,
    emblema: 'üî•'
  },
  {
    titulo: 'Login Streak 30',
    descricao: '30 dias consecutivos de login',
    tipo: 'unica',
    objetivo: 30,
    recompensa: 500,
    emblema: 'üî•üî•'
  },
  {
    titulo: 'Login Streak 100',
    descricao: '100 dias consecutivos de login',
    tipo: 'unica',
    objetivo: 100,
    recompensa: 1000,
    emblema: 'üî•üî•üî•'
  },

  // üèÖ MISS√ïES DE CONQUISTA
  {
    titulo: 'Doador Bronze',
    descricao: '10 doa√ß√µes totais',
    tipo: 'unica',
    objetivo: 10,
    recompensa: 200,
    emblema: 'ü•â'
  },
  {
    titulo: 'Doador Prata',
    descricao: '50 doa√ß√µes totais',
    tipo: 'unica',
    objetivo: 50,
    recompensa: 500,
    emblema: 'ü•à'
  },
  {
    titulo: 'Doador Ouro',
    descricao: '100 doa√ß√µes totais',
    tipo: 'unica',
    objetivo: 100,
    recompensa: 1000,
    emblema: 'ü•á'
  },
  {
    titulo: 'Doador Diamante',
    descricao: '500 doa√ß√µes totais',
    tipo: 'unica',
    objetivo: 500,
    recompensa: 2500,
    emblema: 'üíé'
  },

  // üéÆ MISS√ïES INTERATIVAS
  {
    titulo: 'Compartilhador',
    descricao: 'Compartilhe 5 conte√∫dos',
    tipo: 'unica',
    objetivo: 5,
    recompensa: 50,
    emblema: 'üì§'
  },
  {
    titulo: 'Curtidor',
    descricao: 'Curta 20 conte√∫dos',
    tipo: 'unica',
    objetivo: 20,
    recompensa: 30,
    emblema: 'üëç'
  },
  {
    titulo: 'Favoritos',
    descricao: 'Adicione 10 criadores aos favoritos',
    tipo: 'unica',
    objetivo: 10,
    recompensa: 40,
    emblema: '‚≠ê'
  },

  // üìä MISS√ïES DE N√çVEL
  {
    titulo: 'N√≠vel 5',
    descricao: 'Alcance o n√≠vel 5',
    tipo: 'unica',
    objetivo: 5,
    recompensa: 100,
    emblema: 'üå±'
  },
  {
    titulo: 'N√≠vel 10',
    descricao: 'Alcance o n√≠vel 10',
    tipo: 'unica',
    objetivo: 10,
    recompensa: 200,
    emblema: 'üåø'
  },
  {
    titulo: 'N√≠vel 25',
    descricao: 'Alcance o n√≠vel 25',
    tipo: 'unica',
    objetivo: 25,
    recompensa: 500,
    emblema: 'üå≥'
  },
  {
    titulo: 'N√≠vel 50',
    descricao: 'Alcance o n√≠vel 50',
    tipo: 'unica',
    objetivo: 50,
    recompensa: 1000,
    emblema: 'üèîÔ∏è'
  }
]

async function criarMissoesGamificacao() {
  try {
    console.log('üîÑ Criando miss√µes de gamifica√ß√£o...')

    for (const missao of missoesGamificacao) {
      // Verificar se a miss√£o j√° existe
      const existe = await prisma.missao.findFirst({
        where: {
          titulo: missao.titulo
        }
      })

      if (!existe) {
        await prisma.missao.create({
          data: {
            titulo: missao.titulo,
            descricao: missao.descricao,
            tipo: missao.tipo,
            objetivo: missao.objetivo,
            recompensa: missao.recompensa,
            emblema: missao.emblema,
            ativa: true,
            criadorOnly: false
          }
        })
        console.log(`‚úÖ Criada miss√£o: ${missao.titulo} (${missao.tipo})`)
      } else {
        console.log(`‚è≠Ô∏è  Miss√£o j√° existe: ${missao.titulo}`)
      }
    }

    console.log('üéâ Miss√µes de gamifica√ß√£o criadas com sucesso!')
    console.log(`üìä Total de miss√µes: ${missoesGamificacao.length}`)
    
    // Estat√≠sticas por tipo
    const stats = missoesGamificacao.reduce((acc, missao) => {
      acc[missao.tipo] = (acc[missao.tipo] || 0) + 1
      return acc
    }, {})
    
    console.log('üìà Distribui√ß√£o por tipo:')
    Object.entries(stats).forEach(([tipo, quantidade]) => {
      console.log(`   ${tipo}: ${quantidade} miss√µes`)
    })

  } catch (error) {
    console.error('‚ùå Erro ao criar miss√µes:', error)
  } finally {
    await prisma.$disconnect()
  }
}

criarMissoesGamificacao() 