const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function testarRemocaoConteudo() {
  try {
    console.log('üß™ Testando remo√ß√£o de conte√∫do dos parceiros...')

    // Buscar um conte√∫do do Instagram para testar
    const conteudoParaRemover = await prisma.conteudoParceiro.findFirst({
      where: {
        plataforma: 'instagram'
      },
      include: {
        parceiro: {
          include: {
            usuario: {
              select: {
                id: true,
                nome: true
              }
            }
          }
        }
      }
    })

    if (!conteudoParaRemover) {
      console.log('‚ùå Nenhum conte√∫do do Instagram encontrado para testar')
      return
    }

    console.log(`\nüìã Conte√∫do selecionado para teste:`)
    console.log(`- ID: ${conteudoParaRemover.id}`)
    console.log(`- T√≠tulo: ${conteudoParaRemover.titulo}`)
    console.log(`- Parceiro: ${conteudoParaRemover.parceiro.usuario.nome}`)
    console.log(`- Plataforma: ${conteudoParaRemover.plataforma}`)

    // Verificar se o conte√∫do existe antes da remo√ß√£o
    const conteudoAntes = await prisma.conteudoParceiro.findUnique({
      where: { id: conteudoParaRemover.id }
    })

    if (!conteudoAntes) {
      console.log('‚ùå Conte√∫do n√£o encontrado antes da remo√ß√£o')
      return
    }

    console.log('\n‚úÖ Conte√∫do encontrado antes da remo√ß√£o')

    // Simular a remo√ß√£o (n√£o remover de verdade)
    console.log('\nüîÑ Simulando remo√ß√£o...')
    console.log('‚ö†Ô∏è  Para remover de verdade, descomente a linha abaixo')

    // DESCOMENTE A LINHA ABAIXO PARA REMOVER DE VERDADE:
    // await prisma.conteudoParceiro.delete({ where: { id: conteudoParaRemover.id } })

    console.log('‚úÖ Simula√ß√£o conclu√≠da com sucesso!')
    console.log('\nüìä Para testar a API real:')
    console.log('1. Inicie o servidor: npm run dev')
    console.log('2. Acesse: http://localhost:3000/painel-parceiro')
    console.log('3. Tente remover um conte√∫do')

  } catch (error) {
    console.error('‚ùå Erro ao testar remo√ß√£o:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  testarRemocaoConteudo()
}

module.exports = { testarRemocaoConteudo }
