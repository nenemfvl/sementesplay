const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function verificarNotificacoesUsuario() {
  try {
    console.log('üîç Verificando notifica√ß√µes de usu√°rios espec√≠ficos...')
    
    // Buscar usu√°rios
    const usuarios = await prisma.usuario.findMany({
      take: 3,
      orderBy: {
        dataCriacao: 'desc'
      }
    })
    
    console.log(`üë• Encontrados ${usuarios.length} usu√°rios`)
    
    for (const usuario of usuarios) {
      console.log(`\nüìã Verificando notifica√ß√µes para: ${usuario.nome} (${usuario.id})`)
      
      const notificacoes = await prisma.notificacao.findMany({
        where: {
          usuarioId: usuario.id
        },
        orderBy: {
          data: 'desc'
        }
      })
      
      console.log(`   üìä Total de notifica√ß√µes: ${notificacoes.length}`)
      
      if (notificacoes.length > 0) {
        console.log('   üìã √öltimas 3 notifica√ß√µes:')
        notificacoes.slice(0, 3).forEach((notif, index) => {
          console.log(`   ${index + 1}. ${notif.titulo} (${notif.tipo}) - ${notif.lida ? 'Lida' : 'N√£o lida'}`)
        })
      } else {
        console.log('   ‚ùå Nenhuma notifica√ß√£o encontrada')
      }
    }
    
    // Verificar se h√° notifica√ß√µes de miss√µes
    console.log('\nüéØ Verificando notifica√ß√µes de miss√µes...')
    const notificacoesMissoes = await prisma.notificacao.findMany({
      where: {
        tipo: 'missao'
      },
      orderBy: {
        data: 'desc'
      }
    })
    
    console.log(`üìä Total de notifica√ß√µes de miss√µes: ${notificacoesMissoes.length}`)
    
    if (notificacoesMissoes.length > 0) {
      console.log('üìã √öltimas notifica√ß√µes de miss√µes:')
      notificacoesMissoes.slice(0, 3).forEach((notif, index) => {
        console.log(`${index + 1}. Usu√°rio: ${notif.usuarioId}`)
        console.log(`   T√≠tulo: ${notif.titulo}`)
        console.log(`   Mensagem: ${notif.mensagem}`)
        console.log(`   Data: ${notif.data}`)
        console.log('---')
      })
    }
    
  } catch (error) {
    console.error('‚ùå Erro:', error)
  } finally {
    await prisma.$disconnect()
  }
}

verificarNotificacoesUsuario() 